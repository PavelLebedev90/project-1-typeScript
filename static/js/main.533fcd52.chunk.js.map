{"version":3,"sources":["component/Header/Navigation/Navigation.module.css","component/Users/Users.module.css","component/Header/Header.module.css","component/Profile/MyPosts/Post/Post.module.css","component/Messages/Messages.module.css","component/Profile/ProfileInfo/ProfileInfo.module.css","component/Profile/MyPosts/MyPosts.module.css","component/SignUp/SignUp.module.css","component/Music/Music.tsx","component/Settings/Settings.tsx","component/Header/Navigation/Navigation.tsx","component/Header/Header.tsx","api/api.ts","Redux/users-reducer.ts","component/Users/Paginate/Paginate.tsx","component/Common/Preloader/Preloader.tsx","component/Users/UsersContainer.tsx","component/Profile/ProfileInfo/ProfileInfo.tsx","Redux/profile-reducer.ts","component/Profile/MyPosts/Post/Post.tsx","component/Profile/MyPosts/MyPosts.tsx","component/Profile/MyPosts/MyPostsContainer.tsx","component/Profile/Profile.tsx","component/Profile/ProfileContainer.tsx","component/SignUp/SignUp.tsx","Redux/auth-reducer.ts","component/SignUp/SignUpContainer.tsx","Redux/dialogs-reducer.ts","component/Messages/Message/Message.tsx","component/Messages/Dialog/DialogContainer.tsx","component/Messages/Dialog/Dialog.tsx","App.tsx","Redux/redux-store.ts","index.tsx"],"names":["module","exports","Music","useState","value1","setValue1","value2","setValue2","value3","setValue3","obj","setObj","className","classes","sign","type","value","onChange","e","currentTarget","onClick","name","age","weight","check","Object","entries","Settings","Navigation","nav","to","navData","isActive","nav_link","Header","header","title","title_blue","searchButton","input","placeholder","search","instance","axios","create","withCredentials","baseURL","headers","FOLLOWED","UNFOLLOWED","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","SET_IS_FETCHING","SET_FOLLOW_IN_PROGRESS","initialState","users","pageSize","totalUsersCount","currentPage","isFetching","folowInProgress","setIsFetching","setFollowProgress","userId","Items","currentItems","props","ItemsClass","userClass","ItemsPreload","console","log","map","m","wrapper","ava","s","item","id","src","photos","large","small","avatar","alt","disabled","some","followed","unFollow","follow","description","status","uniqueUrlName","PaginatedItems","itemsPerPage","pageCount","Math","ceil","pages","p","push","setCurrentItems","itemOffset","setItemOffset","useEffect","endOffset","slice","breakLabel","nextLabel","onPageChange","event","newOffset","selected","length","currentPageChanged","pageRangeDisplayed","previousLabel","renderOnZeroPageCount","Preloader","preloader","UsersClass","page","getUsersThunk","setCurrentPage","this","followThunk","unfollowThunk","React","Component","UsersContainer","connect","state","usersPage","dispatch","post","then","response","data","changeFollowedUser","resultCode","userID","delete","changeUnFollowedUser","get","getUsers","items","totalCount","ProfileInfo","profile","img","fullName","aboutMe","contacts","vk","ADD_POST","UPDATE_NEW_POST_TEXT","SET_USER_PROFILE","posts","v1","message","likesCount","newPostText","setUserProfileThunk","getUserProfile","userProfile","Post","MyPosts","updateNewPostText","addPost","statePost","MyPostsContainer","profilePage","newText","Profile","ProfileContainer","useDispatch","useSelector","useParams","SignUp","subtitle","isAuth","authDescription","login","registration","initialStateAuth","email","SignUpContainer","setUserDataThunk","auth","setUserData","ADD_DIALOG_AC","UPDATE_NEW_DIALOG_TEXT","dialogs","messages","newDialogText","Message","stateMessage","DialogContainer","stateDialogs","dialogsPage","addDialog","updateNewDialogText","dialog","App","path","element","rootReducer","combineReducers","action","newTask","newDialog","filter","f","store","createStore","applyMiddleware","thunk","window","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.533fcd52.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav_link\":\"Navigation_nav_link__1JQ1c\",\"nav\":\"Navigation_nav__16eL0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Users_wrapper__UJgO7\",\"ava\":\"Users_ava__1cU0p\",\"description\":\"Users_description__2Q3Wm\",\"currentPage\":\"Users_currentPage__V-LdM\",\"preloader\":\"Users_preloader__1atKF\",\"circle\":\"Users_circle__3XJDa\",\"ItemsPreload\":\"Users_ItemsPreload__2SIH7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__k7DWt\",\"title_blue\":\"Header_title_blue__1Bn_L\",\"title\":\"Header_title__1lnKZ\",\"searchButton\":\"Header_searchButton__149PC\",\"input\":\"Header_input__1i2Ms\",\"search\":\"Header_search__aUpf8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__UbIuW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Messages_messages__3bKAO\",\"item\":\"Messages_item__3LI5Y\",\"dialog\":\"Messages_dialog__3JKPD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"ProfileInfo_img__10XM1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__3VIxe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sign\":\"SignUp_sign__gARew\",\"title\":\"SignUp_title__raVrl\",\"subtitle\":\"SignUp_subtitle__3oZyv\",\"registration\":\"SignUp_registration__3I7-a\",\"authDescription\":\"SignUp_authDescription__2gjEJ\",\"login\":\"SignUp_login__3M53_\"};","import classes from './../SignUp/SignUp.module.css';\r\nimport {useState} from 'react';\r\n\r\n\r\nfunction Music() {\r\n    const [value1, setValue1] = useState('')\r\n    const [value2, setValue2] = useState('')\r\n    const [value3, setValue3] = useState('')\r\n    const [obj, setObj] = useState({})\r\n\r\n    const check = (...args: Array<string>) => {\r\n        setObj({\r\n            name: args[0],\r\n            age: args[1],\r\n            weight: args[2]\r\n        })\r\n    }\r\n    return (\r\n\r\n\r\n        <div className={classes.sign}>\r\n            I am page Music\r\n\r\n            <input type=\"text\" value={value1} onChange={e => setValue1(e.currentTarget.value)}/>\r\n            <input type=\"text\" value={value2} onChange={e => setValue2(e.currentTarget.value)}/>\r\n            <input type=\"text\" value={value3} onChange={e => setValue3(e.currentTarget.value)}/>\r\n            <button onClick={() => check(value1, value2, value3)}></button>\r\n            <span>{Object.entries(obj)}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;","import classes from \"./../SignUp/SignUp.module.css\";\r\n\r\n\r\nfunction Settings(){\r\n    return(\r\n        <div className={classes.sign}>\r\n            I am page Settings\r\n        </div>\r\n    )\r\n}\r\nexport default Settings;","import React from 'react';\r\nimport classes from './Navigation.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nexport function Navigation() {\r\n    return (\r\n        <nav className={classes.nav}>\r\n            <span><NavLink to={\"/profile\"}  className={(navData) => navData.isActive ? `${classes.nav_link}` : \"\" }>Profile</NavLink> </span>\r\n            <span><NavLink to={\"/messages\"}className={(navData) => navData.isActive ? `${classes.nav_link}` : \"\" }>Messages</NavLink></span>\r\n            <span><NavLink to={\"/users\"}className={(navData) => navData.isActive ? `${classes.nav_link}` : \"\" }>Users</NavLink></span>\r\n            <span><NavLink to={\"/music\"}className={(navData) => navData.isActive ? `${classes.nav_link}` : \"\" }>Music</NavLink></span>\r\n            <span><NavLink to={\"/settings\"}className={(navData) => navData.isActive ? `${classes.nav_link}` : \"\" }>Settings</NavLink></span>\r\n            <span><NavLink to={\"/sign_up\"}className={(navData) => navData.isActive ? `${classes.nav_link}` : \"\" }>Sign up</NavLink></span>\r\n        </nav>\r\n    )\r\n}","import React from 'react';\r\nimport classes from \"./Header.module.css\";\r\nimport {Navigation} from \"./Navigation/Navigation\";\r\n\r\n\r\nexport function Header(){\r\n    return (\r\n        <header className={classes.header}>\r\n            <div className={classes.title}>\r\n                <span className={classes.title_blue}>TVER</span>network\r\n            </div>\r\n            <div>\r\n                <Navigation/>\r\n            </div>\r\n            <div className={classes.searchButton}>\r\n                <input className={classes.input} type=\"text\" placeholder={\"Search\"}/>\r\n                <span className={classes.search}>+</span>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\n","import axios, {AxiosInstance} from 'axios';\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials:true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': 'b9ab541c-e0c5-4e3f-a6cb-7e9f4deadb80'\r\n    }\r\n})\r\n\r\nexport const getUsers = (currentPage:number, pageSize:number)=>{\r\n    return instance.get(`users?page=${currentPage}&count=${pageSize}`).then(response=>response.data)\r\n}\r\n\r\nexport const getMe = () =>{\r\n    return instance.get('auth/me').then(response=>response.data)\r\n}\r\n\r\nexport const getUserProfile = (id:string)=>{\r\n    return instance.get(`profile/${id}`).then(response=>response.data)\r\n}\r\n\r\nexport const changeUnFollowedUser = (id:number)=>{\r\n    return instance.delete(`follow/${id}`).then(response=>response.data)\r\n}\r\n\r\nexport const changeFollowedUser = (id:number)=>{\r\n    return instance.post(`follow/${id}`, {}).then(response=>response.data)\r\n}\r\n\r\n","import {UsersAPIType} from '../component/Users/UsersContainer';\r\nimport {changeFollowedUser, changeUnFollowedUser, getUsers} from '../api/api';\r\n\r\n\r\nexport type ActionUsersType = ReturnType<typeof follow> |\r\n    ReturnType<typeof unFollow> |\r\n    ReturnType<typeof setUsers>\r\n|ReturnType<typeof setCurrentPage>\r\n| ReturnType<typeof setTotalUsersCount>\r\n| ReturnType<typeof setIsFetching>\r\n| ReturnType<typeof setFollowProgress>\r\n\r\nexport type UsersType = {\r\n    [key:string]: Array<UserType>\r\n}\r\nexport type UserType = {\r\n    id:string\r\n    userPhoto:string\r\n    followed: boolean\r\n    fullname:string\r\n    status:string\r\n    location: {\r\n        city:string\r\n        country:string\r\n    }\r\n}\r\n\r\nconst FOLLOWED = 'FOLLOWED'\r\nconst UNFOLLOWED = 'UNFOLLOWED'\r\nconst SET_USERS = 'SET_USERS'\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE'\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT'\r\nconst SET_IS_FETCHING = 'SET_IS_FETCHING'\r\nconst SET_FOLLOW_IN_PROGRESS = 'SET_FOLLOW_IN_PROGRESS'\r\n\r\nexport type InitialStateType = {\r\n    users: Array<UsersAPIType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching:boolean\r\n    folowInProgress: number[]\r\n}\r\n\r\nlet initialState:InitialStateType = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    folowInProgress: []\r\n}\r\n\r\nexport const usersReducer = (state = initialState, action: ActionUsersType): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOWED:\r\n        return {...state, users: state.users.map(m=>m.id === action.userID?\r\n                {...m, followed: !m.followed}:m)}\r\n        case UNFOLLOWED:\r\n            return {...state, users: state.users.map(m=>m.id === action.userID?\r\n                    {...m, followed: !m.followed}:m)}\r\n        case SET_USERS:\r\n            return {...state, users: action.users}\r\n        case SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.currentPage}\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {...state, totalUsersCount: action.totalUsersCount}\r\n        case SET_IS_FETCHING:\r\n            return {...state, isFetching: action.isFetching}\r\n        case SET_FOLLOW_IN_PROGRESS:\r\n          return   action.isFetching\r\n                ?\r\n           {\r\n               ...state, folowInProgress: [...state.folowInProgress, action.userId]\r\n           }\r\n           :\r\n              {...state, folowInProgress: state.folowInProgress.filter(f=>f !==action.userId)}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const follow = (userID:number) => {\r\n    return {\r\n        type: FOLLOWED,\r\n        userID\r\n    } as const\r\n}\r\nexport const unFollow = (userID: number) => {\r\n    return {\r\n        type: UNFOLLOWED,\r\n        userID\r\n    } as const\r\n}\r\n\r\nexport const setUsers = (users: Array<UsersAPIType>) => {\r\n    return {\r\n        type: SET_USERS,\r\n        users\r\n    } as const\r\n}\r\nexport const setCurrentPage = (currentPage:number) => {\r\n    return {\r\n        type: SET_CURRENT_PAGE,\r\n        currentPage\r\n    } as const\r\n}\r\nexport const setTotalUsersCount = (totalUsersCount:number) => {\r\n    return {\r\n        type: SET_TOTAL_USERS_COUNT,\r\n        totalUsersCount\r\n    } as const\r\n}\r\nexport const setIsFetching = (isFetching:boolean) => {\r\n    return {\r\n        type: SET_IS_FETCHING,\r\n        isFetching\r\n    } as const\r\n}\r\nexport const setFollowProgress = (isFetching:boolean, userId:number) => {\r\n    return {\r\n        type: SET_FOLLOW_IN_PROGRESS,\r\n        isFetching,\r\n        userId\r\n    } as const\r\n}\r\n\r\nexport const getUsersThunk = (currentPage:number,pageSize:number)=>(dispatch:(action:ActionUsersType)=>void)=>{\r\n    dispatch(setIsFetching(true))\r\n    getUsers(currentPage,pageSize)\r\n        .then(data => {\r\n            dispatch(setUsers(data.items))\r\n            dispatch(setTotalUsersCount(data.totalCount))\r\n            dispatch(setIsFetching(false))\r\n        })\r\n}\r\nexport const followThunk = (id:number)=>(dispatch:(action:ActionUsersType)=>void)=>{\r\n    dispatch(setFollowProgress(true, id))\r\n    changeFollowedUser(id)\r\n        .then(data => {\r\n            if (data.resultCode === 0) {\r\n                dispatch(unFollow(id))\r\n            }\r\n            dispatch(setFollowProgress(false, id))\r\n\r\n        })\r\n}\r\nexport const unfollowThunk = (id:number)=>(dispatch:(action:ActionUsersType)=>void)=>{\r\n    dispatch(setFollowProgress(true, id))\r\n    changeUnFollowedUser(id)\r\n        .then(data => {\r\n            if (data.resultCode === 0) {\r\n                dispatch(follow(id))\r\n            }\r\n            dispatch(setFollowProgress(false, id))\r\n        })\r\n}","import React, {ChangeEvent, MouseEvent, useEffect, useState} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ReactPaginate from 'react-paginate';\r\n\r\nimport userClass from '../Users.module.css';\r\nimport s from '../../Profile/MyPosts/Post/Post.module.css';\r\nimport {avatar, UsersAPIType} from '../UsersContainer';\r\nimport {NavLink} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport {follow} from '../../../Redux/users-reducer';\r\nimport {changeFollowedUser, changeUnFollowedUser} from '../../../api/api';\r\n\r\n\r\ntype ItemsType = {\r\n    currentItems: UsersAPIType[]\r\n    follow: (userID: number) => void\r\n    unFollow: (userID: number) => void\r\n    isFetching: boolean\r\n    folowInProgress: number[]\r\n\r\n}\r\ntype PaginatedItemsType = {\r\n    itemsPerPage: number\r\n    users: UsersAPIType[]\r\n    follow: (userID: number) => void\r\n    unFollow: (userID: number) => void\r\n    currentPageChanged: (page: number) => void\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    isFetching: boolean\r\n    folowInProgress: number[]\r\n}\r\n\r\nfunction Items({currentItems, ...props}: ItemsType) {\r\n\r\n    let ItemsClass = props.isFetching ? userClass.ItemsPreload : '';\r\n    console.log('Items is mound')\r\n\r\n    const changeFollowed = (id: number, followed: boolean) => {\r\n       if(followed){\r\n           props.unFollow(id)\r\n           // props.setFollowProgress(true, id)\r\n           // changeUnFollowedUser(id)\r\n           //     .then(data => {\r\n           //         if (data.resultCode === 0) {\r\n           //             props.follow(id)\r\n           //         }\r\n           //         props.setFollowProgress(false, id)\r\n           //     })\r\n       }else{\r\n           props.follow(id)\r\n           // props.setFollowProgress(true, id)\r\n           // changeFollowedUser(id)\r\n           //     .then(data => {\r\n           //         if (data.resultCode === 0) {\r\n           //             props.unFollow(id)\r\n           //         }\r\n           //         props.setFollowProgress(false, id)\r\n           //\r\n           //     })\r\n       }\r\n    }\r\n    return (\r\n        <>\r\n            {currentItems &&\r\n            currentItems.map((m) => (\r\n                <div key={m.id} className={`${userClass.wrapper} ${ItemsClass}`}>\r\n                    <div className={userClass.ava}>\r\n                        <div className={s.item}>\r\n                            <NavLink to={'/profile/' + m.id}><img src={m.photos.large ? m.photos.large :\r\n                                m.photos.small ? m.photos.small : avatar} alt=\"avatar\"/>\r\n                            </NavLink>\r\n                        </div>\r\n\r\n                        <div>\r\n\r\n                            <button disabled={props.folowInProgress.some(id=>id===m.id)}\r\n                                onClick={() => changeFollowed(m.id, m.followed)}>{m.followed ? 'unFollow' : 'follow'}</button>\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className={userClass.description}>\r\n                        <div>\r\n                            <div>{m.name}</div>\r\n                            <div>{m.status}</div>\r\n                        </div>\r\n                        <div>\r\n                            <div>{m.uniqueUrlName}</div>\r\n                            <div>m.location.city</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </>\r\n    );\r\n}\r\n\r\nexport function PaginatedItems({itemsPerPage, ...props}: PaginatedItemsType) {\r\n\r\n    let pageCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    let pages: number[] = [];\r\n    for (let p = 1; p <= pageCount; p++) {\r\n        pages.push(p)\r\n    }\r\n\r\n    const [currentItems, setCurrentItems] = useState<null | Array<number>>(null);\r\n\r\n    const [itemOffset, setItemOffset] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const endOffset = itemOffset + itemsPerPage;\r\n        setCurrentItems(pages.slice(itemOffset, endOffset));\r\n        // setPageCount(Math.ceil(pages.length / itemsPerPage));\r\n    }, [itemOffset, itemsPerPage]);\r\n\r\n\r\n    const handlePageClick = (event: any) => {\r\n\r\n        const newOffset = (event.selected * itemsPerPage) % pages.length;\r\n        props.currentPageChanged(newOffset)\r\n        setItemOffset(newOffset);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Items currentItems={props.users} unFollow={props.unFollow} follow={props.follow}\r\n                   isFetching={props.isFetching}\r\n                   folowInProgress={props.folowInProgress}\r\n\r\n\r\n            />\r\n            <ReactPaginate\r\n                className={'paginate'}\r\n                breakLabel=\"...\"\r\n                nextLabel=\" >\"\r\n                onPageChange={handlePageClick}\r\n                pageRangeDisplayed={5}\r\n                pageCount={pageCount}\r\n                previousLabel=\"< \"\r\n                renderOnZeroPageCount={() => null}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport userClass from '../../Users/Users.module.css';\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <>\r\n            <span className={userClass.preloader}></span>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Preloader;","import {connect} from 'react-redux';\r\nimport userClass from './Users.module.css'\r\nimport {\r\n    ActionUsersType,\r\n    follow,\r\n    followThunk,\r\n    getUsersThunk,\r\n    InitialStateType,\r\n    setCurrentPage,\r\n    setFollowProgress,\r\n    setIsFetching,\r\n    setTotalUsersCount,\r\n    setUsers,\r\n    unFollow,\r\n    unfollowThunk,\r\n\r\n} from '../../Redux/users-reducer';\r\nimport {AppStateType} from '../../Redux/redux-store';\r\nimport React from 'react';\r\nimport axios from 'axios';\r\nimport classes from '../SignUp/SignUp.module.css';\r\nimport {PaginatedItems} from './Paginate/Paginate';\r\nimport Preloader from '../Common/Preloader/Preloader';\r\nimport {getUsers} from '../../api/api';\r\n\r\ntype dispatchUsersType = (action: ActionUsersType) => void\r\nexport type MapStateType = (state: AppStateType) => InitialStateType\r\nexport type MapDispatchType = (dispatch: dispatchUsersType) => FunctionTypeForUsers\r\nexport type FunctionTypeForUsers = {\r\n    followThunk: (userID: number) => void\r\n    unfollowThunk: (userID: number) => void\r\n    // setUsers: (users: Array<UsersAPIType>) => void\r\n    setCurrentPage: (page: number) => void\r\n    // setTotalUsersCount: (totalUsersCount: number) => void\r\n    // setIsFetching: (isFetching: boolean) => void\r\n    setFollowProgress: (isFetching: boolean, id:number) => void\r\n    // getUsersThunk: (currentPage:number,pageSize:number) => (dispatch:(action:ActionUsersType)=>void) =>void\r\n    getUsersThunk:(currentPage:number,pageSize:number) =>void\r\n}\r\n\r\nexport const avatar = 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRaznFcbeSJTVKFzMptmjTuD6XEAkUuN7SxkA&usqp=CAU'\r\n\r\nexport type UsersAPIType = {\r\n    followed: boolean\r\n    id: number\r\n    name: string\r\n    photos: {\r\n        small: null | string\r\n        large: null | string\r\n    }\r\n    status: null | string\r\n    uniqueUrlName: null | string\r\n\r\n}\r\n\r\n\r\nclass UsersClass extends React.Component<FunctionTypeForUsers & InitialStateType> {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsersThunk(this.props.currentPage,this.props.pageSize)\r\n        // console.log('UsersClass is mound')\r\n        // this.props.setIsFetching(true)\r\n        //\r\n        //     getUsers(this.props.currentPage,this.props.pageSize)\r\n        //     .then(data => {\r\n        //         this.props.setUsers(data.items)\r\n        //         this.props.setTotalUsersCount(data.totalCount)\r\n        //         this.props.setIsFetching(false)\r\n        //     })\r\n    }\r\n\r\n    currentPageChanged = (page: number) => {\r\n        this.props.getUsersThunk(page,this.props.pageSize)\r\n        this.props.setCurrentPage(page)\r\n        // this.props.setIsFetching(true)\r\n        //\r\n        // getUsers(page,this.props.pageSize)\r\n        //     .then(data => {\r\n        //         this.props.setUsers(data.items)\r\n        //         this.props.setIsFetching(false)\r\n        //\r\n        //     })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.sign}>\r\n                <div>\r\n                    {this.props.isFetching ? <Preloader/> : null}\r\n\r\n                    <PaginatedItems itemsPerPage={this.props.pageSize}\r\n                                    isFetching= {this.props.isFetching}\r\n                                    users={this.props.users}\r\n                                    follow={this.props.followThunk}\r\n                                    unFollow={this.props.unfollowThunk}\r\n                                    currentPageChanged={this.currentPageChanged}\r\n                                    totalUsersCount={this.props.totalUsersCount}\r\n                                    pageSize={this.props.pageSize}\r\n                                    folowInProgress={this.props.folowInProgress}\r\n                    />\r\n\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default UsersClass\r\n\r\n\r\nexport let mapStateToProps: MapStateType = (state: AppStateType) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        folowInProgress:state.usersPage.folowInProgress\r\n    }\r\n}\r\n\r\nexport const UsersContainer = connect(mapStateToProps, {\r\n    followThunk,\r\n    unfollowThunk,\r\n    setCurrentPage,\r\n    setFollowProgress,\r\n     getUsersThunk\r\n})(UsersClass)\r\n\r\n","import s from './ProfileInfo.module.css';\r\nimport React from 'react';\r\nimport {ProfileAPIType} from '../ProfileContainer';\r\n\r\ntype ProfileInfoType = {\r\n    profile: ProfileAPIType[]\r\n}\r\n\r\nexport const ProfileInfo = (props: ProfileInfoType) => {\r\n\r\n\r\n    return <div>  {\r\n        props.profile.map(m => {\r\n            return (\r\n                <div key={m.userId}>\r\n                    <div>\r\n                        <img className={s.img}\r\n                             src={m.photos.large ? m.photos.large\r\n                                 : 'https://images.pexels.com/photos/248797/pexels-photo-248797.jpeg?auto=compress&cs=tinysrgb&h=350'}/>\r\n                    </div>\r\n                    <div>\r\n                        fullName:{m.fullName}\r\n                    </div>\r\n                    <div>\r\n                        aboutMe:{m.aboutMe}\r\n\r\n                    </div>\r\n                    <div>\r\n                        {m.contacts.vk}\r\n                    </div>\r\n                </div>\r\n\r\n            )\r\n\r\n        })\r\n    }\r\n    </div>\r\n}","import {v1} from 'uuid';\r\nimport {ProfileAPIType} from '../component/Profile/ProfileContainer';\r\nimport {getUserProfile} from '../api/api';\r\n\r\nexport type ActionProfileType = ReturnType<typeof addPost> | ReturnType<typeof updateNewPostText> |\r\n    ReturnType<typeof setUserProfile>\r\n\r\nexport type ProfilePageType = {\r\n    profile: Array<ProfileAPIType>\r\n    posts: Array<PostType>\r\n    newPostText: string\r\n}\r\nexport type PostType = {\r\n    id: string\r\n    message: string\r\n    likesCount: number\r\n}\r\nconst ADD_POST = 'ADD_POST'\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE_NEW_POST_TEXT'\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE'\r\n\r\n\r\nconst initialState: ProfilePageType = {\r\n    profile: [],\r\n    posts: [\r\n        {id: v1(), message: 'Hi, how are you?', likesCount: 3},\r\n        {id: v1(), message: 'It\\'s my first post', likesCount: 5},\r\n        {id: v1(), message: 'What are you doing maaaaaan?', likesCount: 16},\r\n    ],\r\n    newPostText: 'learn React'\r\n}\r\n\r\nexport const profileReducer = (state: ProfilePageType = initialState, action: ActionProfileType): ProfilePageType => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newTask = {id: v1(), message: state.newPostText, likesCount: 0};\r\n            return  {...state, posts: [...state.posts, newTask],newPostText: '' }\r\n        case UPDATE_NEW_POST_TEXT:\r\n            return {...state, newPostText: action.newText}\r\n        case SET_USER_PROFILE:\r\n            return {...state, profile: [action.userProfile]}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addPost = () => {\r\n    return {\r\n        type: ADD_POST\r\n    } as const\r\n}\r\nexport const updateNewPostText = (newText: string) => {\r\n    return {\r\n        type: UPDATE_NEW_POST_TEXT,\r\n        newText\r\n    } as const\r\n}\r\n\r\nexport const setUserProfile = (userProfile: ProfileAPIType) => {\r\n    return {\r\n        type: SET_USER_PROFILE,\r\n        userProfile\r\n    } as const\r\n}\r\n\r\n\r\nexport const setUserProfileThunk = (id:string)=>(dispatch:(action:ActionProfileType)=>void)=>{\r\n    getUserProfile(id)\r\n        .then(data => {\r\n            dispatch(setUserProfile(data))\r\n\r\n        })\r\n}","import React from 'react';\r\nimport s from './Post.module.css';\r\nimport {PostType} from '../../../../Redux/profile-reducer';\r\n\r\n\r\ntype PostPropsType = {\r\n    post: Array<PostType>\r\n}\r\n\r\nexport const zeleboba = 'https://steamcdn-a.akamaihd.net/steamcommunity/public/images/avatars/62/62d546ccdfc4a838b2e0d622b1b292bfa2af90ec_full.jpg'\r\n\r\nconst Post = (props: PostPropsType) => {\r\n\r\n    return (\r\n        <div className={s.item}>\r\n            {\r\n                props.post.map(m => (<div key={m.id}>\r\n                        <img alt={\"photo\"} src={zeleboba}/>\r\n                        {m.message}\r\n                        <div>\r\n                            <span>like {m.likesCount}</span>\r\n                        </div>\r\n                    </div>\r\n                ))\r\n\r\n            }\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React, {ChangeEvent} from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {PostType} from '../../../Redux/profile-reducer';\r\n\r\n\r\n\r\ntype statePostType = {\r\n    statePost: Array<PostType>\r\n    addPost: () => void\r\n    value:string\r\n    updateNewPostText: (title:string)=>void\r\n}\r\n\r\n\r\nconst MyPosts = (props: statePostType) => {\r\n\r\n    const onChange = (e:ChangeEvent<HTMLTextAreaElement>) => {\r\n      props.updateNewPostText(e.currentTarget.value)\r\n    }\r\n\r\n    const addPostHandler = () => {\r\n            props.addPost();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            My posts\r\n            <div className={s.posts}>\r\n                <textarea onChange={onChange} value={props.value}/>\r\n                <button onClick={addPostHandler}>Add post</button>\r\n            </div>\r\n            <div>\r\n                <Post post={props.statePost}/>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {ActionProfileType, addPost, updateNewPostText} from '../../../Redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport {connect} from 'react-redux';\r\nimport {AppStateType} from '../../../Redux/redux-store';\r\n\r\n\r\n\r\n\r\n\r\n\r\nlet mapStateToProps = (state:AppStateType)=>{\r\n    return {\r\n        statePost: state.profilePage.posts,\r\n        value: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {addPost,updateNewPostText})(MyPosts)\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport classes from './../SignUp/SignUp.module.css';\r\nimport {ProfileInfo} from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport {ProfileAPIType} from './ProfileContainer';\r\n\r\ntype ProfileType = {\r\n    profile:ProfileAPIType[]\r\n}\r\n\r\nconst Profile = (props:ProfileType) => {\r\n    return (\r\n        <div className={`${classes.sign} ${s.profile}`}>\r\n            <ProfileInfo profile={props.profile}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React, {useEffect} from 'react';\r\n\r\nimport axios from 'axios';\r\nimport Profile from './Profile';\r\nimport {connect, useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../Redux/redux-store';\r\nimport {ProfilePageType, setUserProfile, setUserProfileThunk} from '../../Redux/profile-reducer';\r\nimport {useParams} from 'react-router-dom';\r\nimport {getUserProfile} from '../../api/api';\r\n\r\n\r\nexport type ProfileAPIType = {\r\n    aboutMe: string\r\n    contacts: {\r\n        facebook: string\r\n        github: string\r\n        instagram: string\r\n        mainLink: null | string\r\n        twitter: string\r\n        vk: string\r\n        website: null | string\r\n        youtube: null | string\r\n    }\r\n    fullName: string\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    photos: {\r\n        large: string\r\n        small: string\r\n    }\r\n    userId: number\r\n}\r\n\r\n\r\n\r\n\r\nconst ProfileContainer = () => {\r\n    const dispatch = useDispatch()\r\n    const profile = useSelector<AppStateType, ProfileAPIType[]>(state => state.profilePage.profile)\r\n    let {userId} = useParams();\r\n\r\n   let id = userId\r\n\r\n    useEffect(() => {\r\n        if(!id) id = '21570'\r\n        dispatch(setUserProfileThunk(id))\r\n        // getUserProfile(id)\r\n        //     .then(data => {\r\n        //         dispatch(setUserProfile(data))\r\n        //\r\n        //     })\r\n    }, [userId])\r\n\r\n    return (\r\n        <div>\r\n            <Profile profile={profile}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileContainer;","import React from 'react';\r\nimport classes from './SignUp.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\ntype SignUpType = {\r\n    isAuth: boolean\r\n    login: null | string\r\n\r\n}\r\nexport function SignUp(props: SignUpType){\r\n    return (\r\n        <div className={classes.sign}>\r\n            <h1 className={classes.title}>Your Best Social Networks</h1>\r\n            <p className={classes.subtitle}>Make your creative works online and deliver to the world </p>\r\n            {props.isAuth? <div className={classes.authDescription}>\r\n                    Your registration name is <span className={classes.login}>{props.login}</span>\r\n            </div>\r\n            :\r\n                <NavLink to={'/login'}>\r\n                    <div className={classes.registration}>LOGIN</div>\r\n                </NavLink>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}","import {getMe} from '../api/api';\r\n\r\nconst SET_AUTH_USER_DATA = 'SET_AUTH_USER_DATA'\r\n\r\n\r\n\r\nlet initialStateAuth = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\n export type InitialStateAuthType = {\r\n    userId: null | number\r\n    email: null | string\r\n    login: null | string\r\n    isAuth: boolean\r\n}\r\nexport const authReducer = (state: InitialStateAuthType = initialStateAuth, action: ActionType): InitialStateAuthType => {\r\n    switch (action.type) {\r\n        case 'SET_AUTH_USER_DATA':\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n                isAuth: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\ntype ActionType = ReturnType<typeof setUserData>\r\nexport const setUserData = (userId: number, email: string, login: string) => {\r\n    return  {\r\n            type: SET_AUTH_USER_DATA,\r\n            data: {\r\n                userId,\r\n                email,\r\n                login\r\n            }\r\n        } as const\r\n\r\n}\r\n\r\nexport const setUserDataThunk = () =>(dispatch: (action:ActionType)=>void) =>{\r\n    getMe()\r\n        .then(data => {\r\n            if (data.resultCode === 0) {\r\n                let {id, email, login} = data.data\r\n                dispatch(setUserData(id, email, login))\r\n            }\r\n        })\r\n}","import React from 'react';\r\nimport classes from './SignUp.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {SignUp} from './SignUp';\r\nimport axios from 'axios';\r\nimport {connect} from 'react-redux';\r\nimport {AppStateType} from '../../Redux/redux-store';\r\nimport {InitialStateAuthType, setUserData, setUserDataThunk} from '../../Redux/auth-reducer';\r\nimport {getMe} from '../../api/api';\r\n\r\nexport type mapStateToProps = {\r\n    isAuth: boolean\r\n    login: null | string\r\n    userId: null | number\r\n    email: null | string\r\n}\r\nexport type mapDispathToProps = {\r\n    setUserDataThunk: () => void\r\n}\r\n\r\nclass SignUpContainer extends React.Component<mapDispathToProps & InitialStateAuthType> {\r\n\r\n    componentDidMount() {\r\n        this.props.setUserDataThunk()\r\n        // getMe()\r\n        //     .then(data => {\r\n        //         if (data.resultCode === 0) {\r\n        //             let {id, email, login} = data.data\r\n        //             this.props.setUserData(id, email, login)\r\n        //         }\r\n        //     })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <SignUp\r\n                login={this.props.login} isAuth={this.props.isAuth}\r\n            />\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login,\r\n        userId: state.auth.userId,\r\n        email: state.auth.email\r\n    }\r\n\r\n}\r\nexport default connect(mapStateToProps, {setUserDataThunk})(SignUpContainer)","import {v1} from 'uuid';\r\n\r\n\r\nexport type ActionDialogsType = ReturnType<typeof addDialog> | ReturnType<typeof updateNewDialogText>\r\n\r\nexport type DialogsPageType = {\r\n    dialogs: Array<DialogType>\r\n    messages: Array<MessageType>\r\n    newDialogText: string\r\n}\r\nexport type DialogType = {\r\n    id: string\r\n    title: string\r\n}\r\nexport type MessageType = {\r\n    id: string\r\n    name: string\r\n}\r\nconst ADD_DIALOG_AC = 'ADD_DIALOG_AC'\r\nconst UPDATE_NEW_DIALOG_TEXT = 'UPDATE_NEW_DIALOG_TEXT'\r\n\r\nconst initialState = {\r\n    dialogs: [\r\n        {id: v1(), title: 'How do you do?'},\r\n        {id: v1(), title: 'What was you learned in It'},\r\n        {id: v1(), title: 'Yo'},\r\n        {id: v1(), title: 'What a Fuck'},\r\n        {id: v1(), title: 'Go walk today'},\r\n    ],\r\n    messages: [\r\n        {id: v1(), name: 'Pavel'},\r\n        {id: v1(), name: 'Ivan'},\r\n        {id: v1(), name: 'Roman'},\r\n        {id: v1(), name: 'Kostya'},\r\n        {id: v1(), name: 'Misha'},\r\n    ],\r\n    newDialogText: 'Hello!!!'\r\n}\r\n\r\nexport const dialogsReducer = (state: DialogsPageType = initialState, action: ActionDialogsType): DialogsPageType => {\r\n    switch (action.type) {\r\n        case UPDATE_NEW_DIALOG_TEXT:\r\n            return {...state, newDialogText: action.newText}\r\n        case ADD_DIALOG_AC:\r\n            let newDialog: DialogType = {id: v1(), title: state.newDialogText}\r\n            return  {...state, dialogs: [...state.dialogs, newDialog],newDialogText: '' }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const updateNewDialogText = (newText: string) => {\r\n    return {\r\n        type: UPDATE_NEW_DIALOG_TEXT,\r\n        newText\r\n    } as const\r\n}\r\nexport const addDialog = () => {\r\n    return {\r\n        type: ADD_DIALOG_AC,\r\n    } as const\r\n}\r\n","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {MessageType} from '../../../Redux/dialogs-reducer';\r\n\r\n\r\n\r\ntype stateMessageType = {\r\n    stateMessage: Array<MessageType>\r\n}\r\n\r\nexport function Message(props: stateMessageType) {\r\n    return (\r\n        <div>\r\n            {\r\n\r\n                props.stateMessage.map(m => <div key={m.id}> <NavLink to={`./${m.id}`}>{m.name}</NavLink> </div>)\r\n\r\n            }\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport {addDialog, updateNewDialogText} from '../../../Redux/dialogs-reducer';\r\nimport {Dialog} from './Dialog';\r\nimport {connect} from 'react-redux';\r\nimport {AppStateType} from '../../../Redux/redux-store';\r\n\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        stateDialogs: state.dialogsPage.dialogs,\r\n        stateMessage: state.dialogsPage.messages,\r\n        value: state.dialogsPage.newDialogText\r\n    }\r\n}\r\n\r\nexport const DialogContainer = connect(mapStateToProps, {addDialog, updateNewDialogText})(Dialog)\r\n\r\n\r\n","import React, {ChangeEvent} from 'react';\r\nimport {Message} from '../Message/Message';\r\nimport classes from '../../SignUp/SignUp.module.css';\r\nimport s from '../Messages.module.css';\r\nimport {DialogType, MessageType} from '../../../Redux/dialogs-reducer';\r\n\r\n\r\ntype stateDialogType = {\r\n    stateDialogs: Array<DialogType>\r\n    updateNewDialogText: (title: string) => void\r\n    addDialog: () => void\r\n    value: string\r\n    stateMessage: Array<MessageType>\r\n\r\n}\r\n\r\n\r\nexport function Dialog(props: stateDialogType) {\r\n\r\n    const onChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        props.updateNewDialogText(e.currentTarget.value)\r\n    }\r\n\r\n    const onClick = () => {\r\n        props.addDialog()\r\n    }\r\n\r\n    return (\r\n        <div className={classes.sign}>\r\n            <div className={s.messages}>\r\n                <div className={s.item}>\r\n                    <Message stateMessage={props.stateMessage}/>\r\n                </div>\r\n                <div className={s.dialog}>\r\n                    {\r\n                        props.stateDialogs.map(m => <div key={m.id}>{m.title}</div>)\r\n                    }\r\n                    <textarea value={props.value} onChange={onChange}/>\r\n                    <button onClick={onClick}>add</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n","import React from 'react';\nimport './App.css';\n\n\nimport {Route, Routes} from 'react-router-dom';\nimport Music from './component/Music/Music';\nimport Settings from './component/Settings/Settings';\nimport {Header} from './component/Header/Header';\nimport {UsersContainer} from './component/Users/UsersContainer';\nimport ProfileContainer from './component/Profile/ProfileContainer';\nimport SignUpContainer from './component/SignUp/SignUpContainer';\nimport {DialogContainer} from './component/Messages/Dialog/DialogContainer';\n\n\n\n\n\n\nconst App = () => {\n    return (\n        <div className={'wrapper_bg'}>\n            <Header/>\n            <Routes>\n                <Route path=\"/profile\" element={<ProfileContainer/>}/>\n                <Route path=\"/profile/:userId\" element={<ProfileContainer/>}/>\n                <Route path=\"/messages/*\" element={<DialogContainer/>}/>\n                <Route path=\"/users/*\" element={<UsersContainer/>}/>\n                <Route path=\"/music/*\" element={<Music/>}/>\n                <Route path=\"/settings/*\" element={<Settings/>}/>\n                <Route path=\"/sign_up/*\" element={<SignUpContainer/>}/>\n            </Routes>\n\n        </div>\n    );\n}\n\nexport default App;\n","\r\nimport {createStore, combineReducers, applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk';\r\nimport {profileReducer} from './profile-reducer';\r\nimport {dialogsReducer} from './dialogs-reducer';\r\nimport {usersReducer} from './users-reducer';\r\nimport {authReducer} from './auth-reducer';\r\n\r\nlet rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer\r\n});\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\n\r\n\r\n// @ts-ignore\r\nwindow.store = store;\r\n\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom';\nimport store from './Redux/redux-store';\nimport {Provider} from 'react-redux';\nimport {PaginatedItems} from './component/Users/Paginate/Paginate';\n\n\n    ReactDOM.render(\n        <BrowserRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </BrowserRouter>\n        , document.getElementById('root'));\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n/*serviceWorker.unregister();*/\n"],"sourceRoot":""}